// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResetPassword> @Query Error should render error 1`] = `
<ResetPassword
  pageState="loading"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <ForgotMyPasswordForm
        setPageState={[Function]}
      >
        <Box
          max={500}
        >
          <div
            style={
              Object {
                "backgroundColor": "#f8f9fa",
                "border": "solid 1px #ccc",
                "borderRadius": "8px",
                "margin": "0 auto",
                "maxWidth": 500,
                "padding": "20px 20px",
                "width": "100%",
              }
            }
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <h3
                      className="text-danger"
                    >
                      This session has expired!
                    </h3>
                    <p>
                      Enter your email address and we will send you a link to reset your password.
                    </p>
                    <Form
                      className="w-100"
                      id="ForgotMyPasswordForm"
                      inline={false}
                      onSubmit={[Function]}
                    >
                      <form
                        className="w-100"
                        id="ForgotMyPasswordForm"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          controlId="ForgotMyPasswordEmail"
                        >
                          <div
                            className="form-group"
                          >
                            <FormControl
                              isInvalid={false}
                              name="email"
                              onChange={[Function]}
                              placeholder="@"
                              readOnly={false}
                              required={true}
                              type="email"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="ForgotMyPasswordEmail"
                                name="email"
                                onChange={[Function]}
                                placeholder="@"
                                readOnly={false}
                                required={true}
                                type="email"
                                value=""
                              />
                            </FormControl>
                            <Feedback
                              type="invalid"
                            >
                              <div
                                className="invalid-feedback"
                              />
                            </Feedback>
                            <FormText
                              className="text-muted"
                            >
                              <small
                                className="text-muted form-text"
                              >
                                We'll never share your email with anyone else.
                              </small>
                            </FormText>
                          </div>
                        </FormGroup>
                        <Button
                          active={false}
                          className="float-right"
                          disabled={false}
                          id="ForgotMyPasswordSubmit"
                          type="submit"
                          variant="primary"
                        >
                          <button
                            className="float-right btn btn-primary"
                            disabled={false}
                            id="ForgotMyPasswordSubmit"
                            type="submit"
                          >
                            Reset Password
                          </button>
                        </Button>
                      </form>
                    </Form>
                    <TextLink
                      eventHandler={[Function]}
                    >
                      <span
                        id="TextLink"
                        onClick={[Function]}
                        style={
                          Object {
                            "color": "#007bff",
                            "cursor": "pointer",
                          }
                        }
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                192,
                                512,
                                Array [],
                                "f0d9",
                                "M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z",
                              ],
                              "iconName": "caret-left",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          swapOpacity={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-caret-left fa-w-6 "
                            data-icon="caret-left"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 192 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                         back
                      </span>
                    </TextLink>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Box>
      </ForgotMyPasswordForm>
    </div>
  </Container>
</ResetPassword>
`;

exports[`<ResetPassword> @Query Success should render form 1`] = `
<ResetPassword
  pageState="loading"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <ResetPasswordForm
        setPageState={[Function]}
        token="confirmToken1234"
      >
        <Box
          max={500}
        >
          <div
            style={
              Object {
                "backgroundColor": "#f8f9fa",
                "border": "solid 1px #ccc",
                "borderRadius": "8px",
                "margin": "0 auto",
                "maxWidth": 500,
                "padding": "20px 20px",
                "width": "100%",
              }
            }
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <h3>
                      Reset Password
                    </h3>
                    <Form
                      className="w-100"
                      id="ResetPasswordForm"
                      inline={false}
                      onSubmit={[Function]}
                    >
                      <form
                        className="w-100"
                        id="ResetPasswordForm"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          className="mb-3"
                          controlId="newPassword"
                        >
                          <div
                            className="mb-3 form-group"
                          >
                            <FormLabel
                              className="text-muted"
                              column={false}
                              srOnly={false}
                            >
                              <label
                                className="text-muted form-label"
                                htmlFor="newPassword"
                              >
                                New password
                              </label>
                            </FormLabel>
                            <FormControl
                              name="newPassword"
                              onChange={[Function]}
                              placeholder="******"
                              required={true}
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="newPassword"
                                name="newPassword"
                                onChange={[Function]}
                                placeholder="******"
                                required={true}
                                type="password"
                                value=""
                              />
                            </FormControl>
                            <PasswordStrength
                              password=""
                            >
                              <div>
                                <ProgressBar
                                  animated={false}
                                  isChild={false}
                                  label=""
                                  max={100}
                                  min={0}
                                  now={0}
                                  srOnly={false}
                                  striped={false}
                                  variant="danger"
                                >
                                  <div
                                    className="progress"
                                  >
                                    <div
                                      aria-valuemax={100}
                                      aria-valuemin={0}
                                      aria-valuenow={0}
                                      className="progress-bar bg-danger"
                                      role="progressbar"
                                      style={
                                        Object {
                                          "width": "0%",
                                        }
                                      }
                                    />
                                  </div>
                                </ProgressBar>
                                <small
                                  className="form-text text-muted"
                                  id="passwordHelpBlock"
                                />
                              </div>
                            </PasswordStrength>
                          </div>
                        </FormGroup>
                        <FormGroup
                          className="mb-3"
                          controlId="confirmPassword"
                        >
                          <div
                            className="mb-3 form-group"
                          >
                            <FormLabel
                              className="text-muted"
                              column={false}
                              srOnly={false}
                            >
                              <label
                                className="text-muted form-label"
                                htmlFor="confirmPassword"
                              >
                                Confirm password
                              </label>
                            </FormLabel>
                            <FormControl
                              isInvalid={false}
                              name="confirmPassword"
                              onChange={[Function]}
                              placeholder="******"
                              required={true}
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="confirmPassword"
                                name="confirmPassword"
                                onChange={[Function]}
                                placeholder="******"
                                required={true}
                                type="password"
                                value=""
                              />
                            </FormControl>
                            <Feedback
                              type="invalid"
                            >
                              <div
                                className="invalid-feedback"
                              />
                            </Feedback>
                            <FormText
                              className="text-muted"
                            >
                              <small
                                className="text-muted form-text"
                              >
                                Matching password 0 of 0
                              </small>
                            </FormText>
                          </div>
                        </FormGroup>
                        <Button
                          active={false}
                          className="float-right"
                          disabled={false}
                          id="ResetPasswordSubmit"
                          type="submit"
                          variant="primary"
                        >
                          <button
                            className="float-right btn btn-primary"
                            disabled={false}
                            id="ResetPasswordSubmit"
                            type="submit"
                          >
                            Reset Password
                          </button>
                        </Button>
                      </form>
                    </Form>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Box>
      </ResetPasswordForm>
    </div>
  </Container>
</ResetPassword>
`;

exports[`<ResetPassword> @Render should render "error" 1`] = `
<ResetPassword
  pageState="error"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <ForgotMyPasswordForm
        setPageState={[Function]}
      >
        <Box
          max={500}
        >
          <div
            style={
              Object {
                "backgroundColor": "#f8f9fa",
                "border": "solid 1px #ccc",
                "borderRadius": "8px",
                "margin": "0 auto",
                "maxWidth": 500,
                "padding": "20px 20px",
                "width": "100%",
              }
            }
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <h3
                      className="text-danger"
                    >
                      This session has expired!
                    </h3>
                    <p>
                      Enter your email address and we will send you a link to reset your password.
                    </p>
                    <Form
                      className="w-100"
                      id="ForgotMyPasswordForm"
                      inline={false}
                      onSubmit={[Function]}
                    >
                      <form
                        className="w-100"
                        id="ForgotMyPasswordForm"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          controlId="ForgotMyPasswordEmail"
                        >
                          <div
                            className="form-group"
                          >
                            <FormControl
                              isInvalid={false}
                              name="email"
                              onChange={[Function]}
                              placeholder="@"
                              readOnly={false}
                              required={true}
                              type="email"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="ForgotMyPasswordEmail"
                                name="email"
                                onChange={[Function]}
                                placeholder="@"
                                readOnly={false}
                                required={true}
                                type="email"
                                value=""
                              />
                            </FormControl>
                            <Feedback
                              type="invalid"
                            >
                              <div
                                className="invalid-feedback"
                              />
                            </Feedback>
                            <FormText
                              className="text-muted"
                            >
                              <small
                                className="text-muted form-text"
                              >
                                We'll never share your email with anyone else.
                              </small>
                            </FormText>
                          </div>
                        </FormGroup>
                        <Button
                          active={false}
                          className="float-right"
                          disabled={false}
                          id="ForgotMyPasswordSubmit"
                          type="submit"
                          variant="primary"
                        >
                          <button
                            className="float-right btn btn-primary"
                            disabled={false}
                            id="ForgotMyPasswordSubmit"
                            type="submit"
                          >
                            Reset Password
                          </button>
                        </Button>
                      </form>
                    </Form>
                    <TextLink
                      eventHandler={[Function]}
                    >
                      <span
                        id="TextLink"
                        onClick={[Function]}
                        style={
                          Object {
                            "color": "#007bff",
                            "cursor": "pointer",
                          }
                        }
                      >
                        <FontAwesomeIcon
                          border={false}
                          className=""
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                192,
                                512,
                                Array [],
                                "f0d9",
                                "M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z",
                              ],
                              "iconName": "caret-left",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          swapOpacity={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-caret-left fa-w-6 "
                            data-icon="caret-left"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 192 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                         back
                      </span>
                    </TextLink>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Box>
      </ForgotMyPasswordForm>
    </div>
  </Container>
</ResetPassword>
`;

exports[`<ResetPassword> @Render should render "form" 1`] = `
<ResetPassword
  pageState="form"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <ResetPasswordForm
        setPageState={[Function]}
        token="confirmToken1234"
      >
        <Box
          max={500}
        >
          <div
            style={
              Object {
                "backgroundColor": "#f8f9fa",
                "border": "solid 1px #ccc",
                "borderRadius": "8px",
                "margin": "0 auto",
                "maxWidth": 500,
                "padding": "20px 20px",
                "width": "100%",
              }
            }
          >
            <Row
              noGutters={false}
            >
              <div
                className="row"
              >
                <Col>
                  <div
                    className="col"
                  >
                    <h3>
                      Reset Password
                    </h3>
                    <Form
                      className="w-100"
                      id="ResetPasswordForm"
                      inline={false}
                      onSubmit={[Function]}
                    >
                      <form
                        className="w-100"
                        id="ResetPasswordForm"
                        onSubmit={[Function]}
                      >
                        <FormGroup
                          className="mb-3"
                          controlId="newPassword"
                        >
                          <div
                            className="mb-3 form-group"
                          >
                            <FormLabel
                              className="text-muted"
                              column={false}
                              srOnly={false}
                            >
                              <label
                                className="text-muted form-label"
                                htmlFor="newPassword"
                              >
                                New password
                              </label>
                            </FormLabel>
                            <FormControl
                              name="newPassword"
                              onChange={[Function]}
                              placeholder="******"
                              required={true}
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="newPassword"
                                name="newPassword"
                                onChange={[Function]}
                                placeholder="******"
                                required={true}
                                type="password"
                                value=""
                              />
                            </FormControl>
                            <PasswordStrength
                              password=""
                            >
                              <div>
                                <ProgressBar
                                  animated={false}
                                  isChild={false}
                                  label=""
                                  max={100}
                                  min={0}
                                  now={0}
                                  srOnly={false}
                                  striped={false}
                                  variant="danger"
                                >
                                  <div
                                    className="progress"
                                  >
                                    <div
                                      aria-valuemax={100}
                                      aria-valuemin={0}
                                      aria-valuenow={0}
                                      className="progress-bar bg-danger"
                                      role="progressbar"
                                      style={
                                        Object {
                                          "width": "0%",
                                        }
                                      }
                                    />
                                  </div>
                                </ProgressBar>
                                <small
                                  className="form-text text-muted"
                                  id="passwordHelpBlock"
                                />
                              </div>
                            </PasswordStrength>
                          </div>
                        </FormGroup>
                        <FormGroup
                          className="mb-3"
                          controlId="confirmPassword"
                        >
                          <div
                            className="mb-3 form-group"
                          >
                            <FormLabel
                              className="text-muted"
                              column={false}
                              srOnly={false}
                            >
                              <label
                                className="text-muted form-label"
                                htmlFor="confirmPassword"
                              >
                                Confirm password
                              </label>
                            </FormLabel>
                            <FormControl
                              isInvalid={false}
                              name="confirmPassword"
                              onChange={[Function]}
                              placeholder="******"
                              required={true}
                              type="password"
                              value=""
                            >
                              <input
                                className="form-control"
                                id="confirmPassword"
                                name="confirmPassword"
                                onChange={[Function]}
                                placeholder="******"
                                required={true}
                                type="password"
                                value=""
                              />
                            </FormControl>
                            <Feedback
                              type="invalid"
                            >
                              <div
                                className="invalid-feedback"
                              />
                            </Feedback>
                            <FormText
                              className="text-muted"
                            >
                              <small
                                className="text-muted form-text"
                              >
                                Matching password 0 of 0
                              </small>
                            </FormText>
                          </div>
                        </FormGroup>
                        <Button
                          active={false}
                          className="float-right"
                          disabled={false}
                          id="ResetPasswordSubmit"
                          type="submit"
                          variant="primary"
                        >
                          <button
                            className="float-right btn btn-primary"
                            disabled={false}
                            id="ResetPasswordSubmit"
                            type="submit"
                          >
                            Reset Password
                          </button>
                        </Button>
                      </form>
                    </Form>
                  </div>
                </Col>
              </div>
            </Row>
          </div>
        </Box>
      </ResetPasswordForm>
    </div>
  </Container>
</ResetPassword>
`;

exports[`<ResetPassword> @Render should render "loading" 1`] = `
<ResetPassword
  pageState="loading"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <Loading>
        <Fade
          appear={false}
          in={false}
          mountOnEnter={false}
          timeout={300}
          unmountOnExit={false}
        >
          <Transition
            addEndListener={[Function]}
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={false}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={300}
            unmountOnExit={false}
          >
            <div
              className="fade"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgba(0,0,0,0.5)",
                  "display": "flex",
                  "height": "100%",
                  "justifyContent": "center",
                  "left": "0",
                  "position": "absolute",
                  "top": "0",
                  "width": "100%",
                  "zIndex": "1000",
                }
              }
            >
              <Spinner
                animation="border"
                role="status"
                variant="light"
              >
                <div
                  className="spinner-border text-light"
                  role="status"
                >
                  <span
                    className="sr-only"
                  >
                    Loading...
                  </span>
                </div>
              </Spinner>
            </div>
          </Transition>
        </Fade>
      </Loading>
    </div>
  </Container>
</ResetPassword>
`;

exports[`<ResetPassword> @Render should render "success" 1`] = `
<ResetPassword
  pageState="success"
>
  <Container
    className="pt-5"
    fluid={false}
  >
    <div
      className="pt-5 container"
    >
      <Row
        noGutters={false}
      >
        <div
          className="row"
        >
          <Col>
            <div
              className="col"
            >
              <h3
                id="ResetPasswordSuccess"
              >
                Password updated. Please 
                <Link
                  to="/login"
                >
                  click here
                </Link>
                 
                to login
              </h3>
            </div>
          </Col>
        </div>
      </Row>
    </div>
  </Container>
</ResetPassword>
`;
