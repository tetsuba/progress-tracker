// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ForgotMyPasswordForm> @Render should render a success message 1`] = `
<ForgotMyPasswordForm
  defaultEmail="test@test.com"
  resetPassword={[MockFunction]}
>
  <Row
    noGutters={false}
  >
    <div
      className="row"
    >
      <h3>
        Please check your email.
      </h3>
    </div>
  </Row>
</ForgotMyPasswordForm>
`;

exports[`<ForgotMyPasswordForm> @Render should render email password reset form 1`] = `
<ForgotMyPasswordForm
  defaultEmail="test@test.com"
  resetPassword={[MockFunction]}
>
  <Col>
    <div
      className="col"
    >
      <Row
        noGutters={false}
      >
        <div
          className="row"
        >
          <h3>
            Forgot my password
          </h3>
        </div>
      </Row>
      <Row
        noGutters={false}
      >
        <div
          className="row"
        >
          <p>
            Enter your email address and we will send you a link to reset your password.
          </p>
        </div>
      </Row>
      <Row
        noGutters={false}
      >
        <div
          className="row"
        >
          <Form
            className="w-100"
            id="ForgotMyPasswordForm"
            inline={false}
            onSubmit={[Function]}
          >
            <form
              className="w-100"
              id="ForgotMyPasswordForm"
              onSubmit={[Function]}
            >
              <FormGroup
                controlId="forgotMyPasswordEmail"
              >
                <div
                  className="form-group"
                >
                  <FormControl
                    isInvalid={false}
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter email"
                    required={true}
                    type="email"
                    value="test@test.com"
                  >
                    <input
                      className="form-control"
                      id="forgotMyPasswordEmail"
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter email"
                      required={true}
                      type="email"
                      value="test@test.com"
                    />
                  </FormControl>
                  <Feedback
                    type="invalid"
                  >
                    <div
                      className="invalid-feedback"
                    />
                  </Feedback>
                  <FormText
                    className="text-muted"
                  >
                    <small
                      className="text-muted form-text"
                    >
                      We'll never share your email with anyone else.
                    </small>
                  </FormText>
                </div>
              </FormGroup>
              <Button
                active={false}
                disabled={false}
                id="ForgotMyPasswordSubmit"
                type="submit"
                variant="primary"
              >
                <button
                  className="btn btn-primary"
                  disabled={false}
                  id="ForgotMyPasswordSubmit"
                  type="submit"
                >
                  Reset Password
                </button>
              </Button>
            </form>
          </Form>
        </div>
      </Row>
      <Row
        className="mt-3"
        noGutters={false}
      >
        <div
          className="mt-3 row"
        >
          <TextLink
            eventHandler={[MockFunction]}
          >
            <span
              id="TextLink"
              onClick={[MockFunction]}
              style={
                Object {
                  "color": "#007bff",
                  "cursor": "pointer",
                }
              }
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon={
                  Object {
                    "icon": Array [
                      192,
                      512,
                      Array [],
                      "f0d9",
                      "M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z",
                    ],
                    "iconName": "caret-left",
                    "prefix": "fas",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                swapOpacity={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-caret-left fa-w-6 "
                  data-icon="caret-left"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 192 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
               back
            </span>
          </TextLink>
        </div>
      </Row>
    </div>
  </Col>
</ForgotMyPasswordForm>
`;
