// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<MyDetailsForm> @Render User clicks on "Edit" button should render form available to edit 1`] = `
<MyDetailsForm
  handleSubmit={[MockFunction]}
  user={
    Object {
      "firstName": "Bob",
      "lastName": "Doh",
    }
  }
>
  <Row
    noGutters={false}
  >
    <div
      className="row"
    >
      <Box
        max={500}
      >
        <div
          style={
            Object {
              "backgroundColor": "#f8f9fa",
              "border": "solid 1px #ccc",
              "borderRadius": "8px",
              "margin": "0 auto",
              "maxWidth": 500,
              "padding": "20px 20px",
              "width": "100%",
            }
          }
        >
          <h3
            className="mb-5"
          >
            My Details
          </h3>
          <Form
            id="MyDetailsForm"
            inline={false}
            onSubmit={[Function]}
          >
            <form
              className=""
              id="MyDetailsForm"
              onSubmit={[Function]}
            >
              <FormGroup
                className="pb-3"
                controlId="formPlaintextFirstName"
              >
                <div
                  className="pb-3 form-group"
                >
                  <FormLabel
                    className="text-muted"
                    column={false}
                    srOnly={false}
                  >
                    <label
                      className="text-muted form-label"
                      htmlFor="formPlaintextFirstName"
                    >
                      First Name:
                    </label>
                  </FormLabel>
                  <FormControl
                    isInvalid={false}
                    name="firstName"
                    onChange={[Function]}
                    placeholder="Bob"
                    readOnly={true}
                    required={true}
                    type="text"
                    value="Bob"
                  >
                    <input
                      className="form-control"
                      id="formPlaintextFirstName"
                      name="firstName"
                      onChange={[Function]}
                      placeholder="Bob"
                      readOnly={true}
                      required={true}
                      type="text"
                      value="Bob"
                    />
                  </FormControl>
                </div>
              </FormGroup>
              <FormGroup
                controlId="formPlaintextPassword"
              >
                <div
                  className="form-group"
                >
                  <FormLabel
                    className="text-muted"
                    column={false}
                    srOnly={false}
                  >
                    <label
                      className="text-muted form-label"
                      htmlFor="formPlaintextPassword"
                    >
                      Last Name:
                    </label>
                  </FormLabel>
                  <FormControl
                    isInvalid={false}
                    name="lastName"
                    onChange={[Function]}
                    placeholder="Doh"
                    readOnly={true}
                    required={true}
                    type="input"
                    value="Doh"
                  >
                    <input
                      className="form-control"
                      id="formPlaintextPassword"
                      name="lastName"
                      onChange={[Function]}
                      placeholder="Doh"
                      readOnly={true}
                      required={true}
                      type="input"
                      value="Doh"
                    />
                  </FormControl>
                  <Feedback
                    type="invalid"
                  >
                    <div
                      className="invalid-feedback"
                    />
                  </Feedback>
                </div>
              </FormGroup>
              <Button
                active={false}
                className="float-right"
                disabled={false}
                id="MyDetailsFormEdit"
                onClick={[Function]}
                style={
                  Object {
                    "width": 100,
                  }
                }
                type="button"
                variant="primary"
              >
                <button
                  className="float-right btn btn-primary"
                  disabled={false}
                  id="MyDetailsFormEdit"
                  onClick={[Function]}
                  style={
                    Object {
                      "width": 100,
                    }
                  }
                  type="button"
                >
                  Edit
                </button>
              </Button>
            </form>
          </Form>
        </div>
      </Box>
    </div>
  </Row>
</MyDetailsForm>
`;

exports[`<MyDetailsForm> @Render should render default state which is not available to edit 1`] = `
<MyDetailsForm
  handleSubmit={[MockFunction]}
  user={
    Object {
      "firstName": "Bob",
      "lastName": "Doh",
    }
  }
>
  <Row
    noGutters={false}
  >
    <div
      className="row"
    >
      <Box
        max={500}
      >
        <div
          style={
            Object {
              "backgroundColor": "#f8f9fa",
              "border": "solid 1px #ccc",
              "borderRadius": "8px",
              "margin": "0 auto",
              "maxWidth": 500,
              "padding": "20px 20px",
              "width": "100%",
            }
          }
        >
          <h3
            className="mb-5"
          >
            My Details
          </h3>
          <Form
            id="MyDetailsForm"
            inline={false}
            onSubmit={[Function]}
          >
            <form
              className=""
              id="MyDetailsForm"
              onSubmit={[Function]}
            >
              <FormGroup
                className="pb-3"
                controlId="formPlaintextFirstName"
              >
                <div
                  className="pb-3 form-group"
                >
                  <FormLabel
                    className="text-muted"
                    column={false}
                    srOnly={false}
                  >
                    <label
                      className="text-muted form-label"
                      htmlFor="formPlaintextFirstName"
                    >
                      First Name:
                    </label>
                  </FormLabel>
                  <FormControl
                    isInvalid={false}
                    name="firstName"
                    onChange={[Function]}
                    placeholder="Bob"
                    readOnly={true}
                    required={true}
                    type="text"
                    value="Bob"
                  >
                    <input
                      className="form-control"
                      id="formPlaintextFirstName"
                      name="firstName"
                      onChange={[Function]}
                      placeholder="Bob"
                      readOnly={true}
                      required={true}
                      type="text"
                      value="Bob"
                    />
                  </FormControl>
                </div>
              </FormGroup>
              <FormGroup
                controlId="formPlaintextPassword"
              >
                <div
                  className="form-group"
                >
                  <FormLabel
                    className="text-muted"
                    column={false}
                    srOnly={false}
                  >
                    <label
                      className="text-muted form-label"
                      htmlFor="formPlaintextPassword"
                    >
                      Last Name:
                    </label>
                  </FormLabel>
                  <FormControl
                    isInvalid={false}
                    name="lastName"
                    onChange={[Function]}
                    placeholder="Doh"
                    readOnly={true}
                    required={true}
                    type="input"
                    value="Doh"
                  >
                    <input
                      className="form-control"
                      id="formPlaintextPassword"
                      name="lastName"
                      onChange={[Function]}
                      placeholder="Doh"
                      readOnly={true}
                      required={true}
                      type="input"
                      value="Doh"
                    />
                  </FormControl>
                  <Feedback
                    type="invalid"
                  >
                    <div
                      className="invalid-feedback"
                    />
                  </Feedback>
                </div>
              </FormGroup>
              <Button
                active={false}
                className="float-right"
                disabled={false}
                id="MyDetailsFormEdit"
                onClick={[Function]}
                style={
                  Object {
                    "width": 100,
                  }
                }
                type="button"
                variant="primary"
              >
                <button
                  className="float-right btn btn-primary"
                  disabled={false}
                  id="MyDetailsFormEdit"
                  onClick={[Function]}
                  style={
                    Object {
                      "width": 100,
                    }
                  }
                  type="button"
                >
                  Edit
                </button>
              </Button>
            </form>
          </Form>
        </div>
      </Box>
    </div>
  </Row>
</MyDetailsForm>
`;
